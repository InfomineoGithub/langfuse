name: Staging - Build and Publish Langfuse Docker Images

on:
  push:
    branches: [ 'dev' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: pnpm/action-setup@v3
        with:
          version: 9.5.0
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set NEXT_PUBLIC_BUILD_ID
        run: echo "NEXT_PUBLIC_BUILD_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Echo Commit Hash
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "Building commit hash: $COMMIT_HASH"
      
      # authenticate to GCP artifact registry
      - name: GCP Authenticate Github
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.STAGE_GCP_SA_KEY }}'
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Authenticate Docker to GCP Artifact registry
        run: gcloud auth configure-docker "${{ secrets.GCP_REGION }}-docker.pkg.dev"
      
      # setup docker builder environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      
      # build web
      - name: Extract metadata (tags, labels) for Docker
        id: meta-web
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.STAGE_GCP_PROJECT_ID }}/brain-langfuse-web/langfuse:latest
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}},enable=${{ !contains(github.ref, '-rc') }}
            type=semver,pattern={{major}},enable=${{ !contains(github.ref, '-rc') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v3') && !contains(github.ref, '-rc') }}
      - name: Build and push Docker image (web)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./web/Dockerfile
          push: true
          tags: |
            ${{ steps.meta-web.outputs.tags }}
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.STAGE_GCP_PROJECT_ID }}/brain-langfuse-web/langfuse:latest
          labels: ${{ steps.meta-web.outputs.labels }}
          platforms: |
            linux/amd64
            ${{ startsWith(github.ref, 'refs/tags/') && 'linux/arm64' || '' }}
      
      # build worker
      - name: Extract metadata (tags, labels) for Docker
        id: meta-worker
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.STAGE_GCP_PROJECT_ID }}/brain-langfuse-worker/langfuse-worker:latest
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}},enable=${{ !contains(github.ref, '-rc') }}
            type=semver,pattern={{major}},enable=${{ !contains(github.ref, '-rc') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v3') && !contains(github.ref, '-rc') }}
      - name: Build and push Docker image (worker)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./worker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta-worker.outputs.tags }}
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.STAGE_GCP_PROJECT_ID }}/brain-langfuse-worker/langfuse-worker:latest
          labels: ${{ steps.meta-worker.outputs.labels }}
          platforms: |
            linux/amd64
            ${{ startsWith(github.ref, 'refs/tags/') && 'linux/arm64' || '' }}